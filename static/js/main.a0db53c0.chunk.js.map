{"version":3,"sources":["Textfield.js","Form.js","Modal.js","MenuItem.js","ButtonShowModal.js","Header.js","App.js","reportWebVitals.js","index.js"],"names":["TextField","props","handleClickOnInput","bind","handleBlurOnInput","state","placeholder","this","setState","e","className","classNames","required","type","name","onChange","onClick","onBlur","error","Component","Form","onClose","onSubmit","message","fields","eMail","phone","fields_test","errors","wasSubmitted","field","console","log","f","target","value","fieldValidation","length","lastAtPos","lastIndexOf","lastDotPos","indexOf","formIsValid","preventDefault","handleValidation","fetch","method","headers","body","JSON","stringify","then","res","status","rej","classes","contactSubmit","handleChange","Modal","show","children","MenuItem","anchorTarget","handleClick","window","scrollTo","top","itemPosition","left","behavior","block","document","getElementById","itemName","active","href","aria-label","itemTitle","ButtonShowModal","visible","Header","handleResize","handleScroll","menuToggle","sections","cases","architecture","contact","activeMenuItem","positions","windowWidth","menuVisible","innerWidth","getAnchorPoints","curScroll","pageYOffset","documentElement","scrollTop","headerHeight","querySelector","offsetHeight","newPos","key","getBoundingClientRect","curPos","scrollY","curSection","product","newMenuState","addEventListener","removeEventListener","menuItems","push","handleClickOnLogo","closeModal","App","showModal","modalIsVisible","showModalMessage","modalMessageText","modalMessageIsVisible","scrollFirstScreen","scrollFirstScreenDetection","id","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a0db53c0.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nclass TextField extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.handleClickOnInput = this.handleClickOnInput.bind(this);\r\n        this.handleBlurOnInput = this.handleBlurOnInput.bind(this);\r\n        this.state = {\r\n            placeholder: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.setState({placeholder: this.props.placeholder});\r\n    }\r\n\r\n    handleClickOnInput(e) {\r\n        this.setState({placeholder: ''});\r\n    }\r\n\r\n    handleBlurOnInput(e) {\r\n        this.setState({placeholder: this.props.placeholder});\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={classNames(\"textfield\", {'is-required': this.props.required})}>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"textfield__input\"\r\n                        name={this.props.name}\r\n                        placeholder={this.state.placeholder}\r\n                        onChange={this.props.onChange}\r\n                        onClick={this.handleClickOnInput}\r\n                        onBlur={this.handleBlurOnInput}/>\r\n                    <div className=\"textfield__error\">{this.props.error}</div>\r\n                </div>\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TextField;\r\n","import React, {Component} from \"react\";\r\nimport TextField from \"./Textfield\";\r\nimport classNames from \"classnames\";\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fields: {\r\n                name: '',\r\n                eMail: '',\r\n                phone: '',\r\n                message: '',\r\n                type: this.props.type\r\n            },\r\n            fields_test: {\r\n                name: '',\r\n                eMail: '',\r\n                phone: '',\r\n                message: '',\r\n                type: this.props.type\r\n            },\r\n            errors: {},\r\n            wasSubmitted: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if (this.props.type === \"DEMO\" || \"QUESTION\") {\r\n/*            let f = {...this.state.fields};\r\n            f.type = this.props.type;\r\n            console.log(f);\r\n            this.setState({fields: f});*/\r\n        }\r\n    }\r\n\r\n    onClose = e => {\r\n        this.props.onClose && this.props.onClose(e);\r\n    };\r\n    onSubmit = (e, message) => {\r\n        this.props.onSubmit && this.props.onSubmit(e, message);\r\n    };\r\n\r\n    handleChange(field, e) {\r\n        console.log(this.state.fields);\r\n        //let fields = this.state.fields;\r\n        let f = {...this.state.fields};\r\n\r\n        //fields[field] = e.target.value;\r\n        f[field] = e.target.value;\r\n        this.setState({fields: f});\r\n\r\n        //this.setState({fields: {}});\r\n\r\n        console.log(this.state.fields);\r\n        //console.log(fields);\r\n        console.log(f);\r\n        console.log('}');\r\n\r\n\r\n        if (this.state.wasSubmitted) {\r\n            this.fieldValidation(e);\r\n        }\r\n    }\r\n\r\n    fieldValidation(e) {\r\n        let fields = this.state.fields;\r\n        //let errors = this.state.errors;\r\n        let errors = this.state.errors;\r\n\r\n        if (e.target.name === \"name\") {\r\n            if (!fields[\"name\"]) {\r\n                errors[\"name\"] = \"Cannot be empty\";\r\n                //this.setState({errors: errors});\r\n\r\n            } else if (typeof fields[\"name\"] !== \"undefined\") {\r\n                if (fields[\"name\"].length > 100) {\r\n                    errors[\"name\"] = \"Name is too long\";\r\n                } else {\r\n                    errors[\"name\"] = \"\";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.target.name === \"eMail\") {\r\n            if (!fields[\"eMail\"]) {\r\n                errors[\"eMail\"] = \"Cannot be empty\";\r\n            } else if (typeof fields[\"eMail\"] !== \"undefined\") {\r\n                let lastAtPos = fields[\"eMail\"].lastIndexOf('@');\r\n                let lastDotPos = fields[\"eMail\"].lastIndexOf('.');\r\n\r\n                if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"eMail\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"eMail\"].length - lastDotPos) > 2)) {\r\n                    errors[\"eMail\"] = \"Email is not valid\";\r\n                } else {\r\n                    errors[\"eMail\"] = \"\";\r\n                }\r\n            }\r\n        }\r\n        this.setState({errors});\r\n        //this.setState({errors, fields});\r\n    }\r\n\r\n    handleValidation() {\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        if (!fields[\"name\"]) {\r\n            formIsValid = false;\r\n            errors[\"name\"] = \"Cannot be empty\";\r\n            this.setState({errors: errors});\r\n\r\n        } else if (typeof fields[\"name\"] !== \"undefined\") {\r\n            if (fields[\"name\"].length > 100) {\r\n                formIsValid = false;\r\n                errors[\"name\"] = \"Name is too long\";\r\n            }\r\n        }\r\n\r\n        if (!fields[\"eMail\"]) {\r\n            formIsValid = false;\r\n            errors[\"eMail\"] = \"Cannot be empty\";\r\n        }\r\n\r\n        if (typeof fields[\"eMail\"] !== \"undefined\") {\r\n            let lastAtPos = fields[\"eMail\"].lastIndexOf('@');\r\n            let lastDotPos = fields[\"eMail\"].lastIndexOf('.');\r\n\r\n            if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"eMail\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"eMail\"].length - lastDotPos) > 2)) {\r\n                formIsValid = false;\r\n                errors[\"eMail\"] = \"Email is not valid11\";\r\n            }\r\n        }\r\n\r\n        this.setState({errors: errors});\r\n        this.setState({wasSubmitted: true});\r\n        return formIsValid;\r\n    }\r\n\r\n    contactSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (this.handleValidation()) {\r\n            const response = fetch('/message', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify(this.state.fields),\r\n            });\r\n            response.then(res => {\r\n                if (res.status === 429) {\r\n                    this.onSubmit(e, ['We have already recieved your request!',\r\n                        <br/>, 'We will get back to you as soon as possible']);\r\n                    this.onClose(e);\r\n                } else {\r\n                    console.log(\"Form submitted\", res);\r\n                    this.onSubmit(e, ['Thank you for your request!',\r\n                        <br/>, 'We will get back to you as soon as possible']);\r\n                    this.onClose(e);\r\n                }\r\n            }, rej => {\r\n                console.log(\"Error in request \", rej);\r\n                this.onSubmit(e, ['Oops! Something went wrong.',\r\n                    <br/>, 'Please feel free to send us an email to eleonov@solit-clouds.ru. We will get back to you as soon as possible']);\r\n                this.onClose(e);\r\n            })\r\n\r\n        } else {\r\n            console.log(\"Form has errors.\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <form name=\"contactform\" className={classNames(\"form\", this.props.classes)}\r\n                      onSubmit={this.contactSubmit.bind(this)}>\r\n                    <h3 className=\"form__header\">Have a question about EHR DB?</h3>\r\n                    <div className=\"form__caption\">\r\n                        Please let us know here and we will get back to you very quickly\r\n                    </div>\r\n                    <div className=\"form__row\">\r\n                        <div className=\"form__col form__col-2\">\r\n                            <TextField name=\"name\"\r\n                                       placeholder=\"Name\"\r\n                                       required\r\n                                       onChange={this.handleChange.bind(this, \"name\")}\r\n                                       error={this.state.errors[\"name\"]}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form__row\">\r\n                        <div className=\"form__col form__col-2 is-nessesary\">\r\n                            <TextField name=\"eMail\"\r\n                                       placeholder=\"E-mail\"\r\n                                       required\r\n                                       onChange={this.handleChange.bind(this, \"eMail\")}\r\n                                       error={this.state.errors[\"eMail\"]}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form__col form__col-2\">\r\n                            <TextField name=\"phone\"\r\n                                       placeholder=\"Phone\"\r\n                                       onChange={this.handleChange.bind(this, \"phone\")}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form__row\">\r\n                        <div className=\"form__col\">\r\n                            <textarea name=\"message\" className=\"textarea\"\r\n                                      placeholder=\"Message\"\r\n                                      onChange={this.handleChange.bind(this, \"message\")}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form__row\">\r\n                        <div className=\"form__col form__col_flex\">\r\n                            <button className=\"btn btn_primary\">Submit</button>\r\n                            <div className=\"form__legend\">* - Fields are required</div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import React, {Component} from \"react\";\r\n\r\nclass Modal extends Component {\r\n    onClose = e => {\r\n        this.props.onClose && this.props.onClose(e);\r\n    };\r\n    render() {\r\n        if(!this.props.show){\r\n            return null;\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"modal\" onClose={e => {\r\n                    this.onClose(e);\r\n                }}>\r\n                    <div className=\"modal__background\" onClick={this.onClose}/>\r\n                    <div className=\"modal__wrapper\">\r\n                        <div className=\"modal__close\" onClick={this.onClose}>\r\n                            <i className=\"material-icons md-36\">\r\n                                close\r\n                            </i>\r\n                        </div>\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nclass MenuItem extends Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.anchorTarget = null;\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(e) {\r\n        e.preventDefault();\r\n        window.scrollTo({top: this.props.itemPosition, left: 0, behavior:\"smooth\", block: \"start\"});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.anchorTarget = document.getElementById(this.props.itemName);\r\n    }\r\n    componentWillUnmount() {\r\n        this.anchorTarget = null;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <li className={classNames(\"menu__item\", this.props.active)}>\r\n                <a href={\"#\" + this.props.itemName} onClick={this.handleClick} aria-label={'Scroll to' + this.props.itemName}>\r\n                    {this.props.itemTitle}\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MenuItem;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nfunction ButtonShowModal({onClick, visible}) {\r\n    return (\r\n        <div className={classNames(\"header__btn-wrap\", {\"is-visible\": visible})}>\r\n        <button className=\"btn btn_white header__btn\"\r\n                onClick={onClick}>\r\n            Request a demo\r\n        </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonShowModal;\r\n","import React, {Component} from \"react\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport classNames from \"classnames\";\r\nimport ButtonShowModal from \"./ButtonShowModal\";\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleResize = this.handleResize.bind(this);\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n        this.menuToggle = this.menuToggle.bind(this);\r\n\r\n        this.sections = {\r\n                cases: 'Cases',\r\n                architecture: 'Architecture',\r\n                contact: 'Contact'\r\n            };\r\n        this.state = {\r\n            activeMenuItem: {\r\n                top: null,\r\n                cases: null,\r\n                architecture: null,\r\n                contact: null\r\n            },\r\n            positions: {\r\n                cases: '',\r\n                architecture: '',\r\n                contact: ''\r\n            },\r\n            windowWidth: '',\r\n            menuVisible: false\r\n        };\r\n    }\r\n\r\n    handleResize() {\r\n        this.setState({windowWidth: window.innerWidth});\r\n        this.getAnchorPoints();\r\n    };\r\n\r\n    getAnchorPoints() {\r\n        const curScroll = window.pageYOffset || document.documentElement.scrollTop;\r\n        const headerHeight = document.querySelector('.header').offsetHeight;\r\n\r\n        let newPos = {};\r\n        for (let key in this.state.positions) {\r\n            newPos[key] = this.state.positions[key];\r\n        }\r\n        for (let key in newPos) {\r\n            newPos[key] = (document.getElementById(key).getBoundingClientRect().top + curScroll - headerHeight);\r\n        }\r\n        this.setState({positions: newPos});\r\n    }\r\n\r\n    handleScroll() {\r\n        const curPos = window.scrollY;\r\n        let curSection = null;\r\n\r\n        if(curPos > (this.state.positions.contact - 2)) {\r\n            curSection = 'contact';\r\n        } else if(curPos > (this.state.positions.architecture - 2)) {\r\n            curSection = 'architecture';\r\n        } else if(curPos > (this.state.positions.cases - 2)) {\r\n            curSection = 'cases';\r\n        } else if(curPos > (this.state.positions.product - 2)) {\r\n            curSection = 'product';\r\n        } else {\r\n            curSection = 'top';\r\n        }\r\n\r\n        if(this.state.activeMenuItem[curSection] !== \"active\") {\r\n\r\n            const newMenuState = {\r\n                top: '',\r\n                product: '',\r\n                cases: '',\r\n                architecture: '',\r\n                contact: ''\r\n            };\r\n            newMenuState[curSection] = \"active\";\r\n            this.setState({ activeMenuItem: newMenuState });\r\n        }\r\n    }\r\n\r\n    handleClickOnLogo(e) {\r\n        e.preventDefault();\r\n        window.scrollTo({top: 0, left: 0, behavior:\"smooth\", block: \"start\"});\r\n    }\r\n\r\n    menuToggle() {\r\n        this.setState({menuVisible: !this.state.menuVisible});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAnchorPoints();\r\n        window.addEventListener('resize', this.handleResize);\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize);\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    render() {\r\n        const menuItems = [];\r\n        for (var key in this.sections) {\r\n            menuItems.push(<MenuItem itemName={key} itemTitle={this.sections[key]} itemPosition={this.state.positions[key]} active={this.state.activeMenuItem[key]}/>);\r\n        }\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header__container\">\r\n                    <div className=\"logo\" onClick={ this.state.activeMenuItem.top !== 'active' ? this.handleClickOnLogo : null }>\r\n                        DB\r\n                    </div>\r\n                    <ul className={classNames(\"menu\", {\"is-visible\": this.state.menuVisible})}>\r\n                        {menuItems}\r\n                    </ul>\r\n                    <div className=\"login\">\r\n                        Log In\r\n                    </div>\r\n                    <div className=\"lang\">\r\n\r\n                    </div>\r\n                    <ButtonShowModal\r\n                        onClick={this.props.closeModal}\r\n                        visible={this.state.activeMenuItem.top !== null && this.state.activeMenuItem.top !== 'active'}/>\r\n                    <i className=\"material-icons header__hamb\" onClick={this.menuToggle}>\r\n                        menu\r\n                    </i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport './App.scss';\nimport Form from \"./Form\";\nimport Modal from \"./Modal\";\nimport Header from \"./Header\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modalIsVisible: false,\n            modalMessageIsVisible: false,\n            modalMessageText: '',\n            scrollFirstScreen: false\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.scrollFirstScreenDetection = this.scrollFirstScreenDetection.bind(this));\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.scrollFirstScreenDetection = this.scrollFirstScreenDetection.bind(this));\n    }\n\n    scrollFirstScreenDetection() {\n        const FIRSTSCREENHEIGHT = 760;\n        this.setState({scrollFirstScreen: (window.pageYOffset > FIRSTSCREENHEIGHT)});\n    }\n\n    showModal = (e) => {\n        this.setState({\n            modalIsVisible: !this.state.modalIsVisible\n        });\n    };\n    showModalMessage = (e, message) => {\n        this.setState({\n            modalMessageText: message\n        });\n        this.setState({\n            modalMessageIsVisible: !this.state.modalMessageIsVisible\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <Header closeModal={e => {\n                    this.showModal()\n                }}/>\n                <div className=\"section section1\">\n                    <div className=\"container section1__container\">\n                        <h1 className=\"section__header section1__header\">A platform for building\n                            <br/>healthcare solutions using\n                            <br/><span className=\"bold\">openEHR standards</span></h1>\n                        <div className=\"section1__infogr\"/>\n                        <div className=\"section1__buttons\">\n                            <button className=\"btn btn_contour-white\">\n                                Try in cloud\n                            </button>\n                            <button className=\"btn btn_white\"\n                                    onClick={e => {\n                                        this.showModal();\n                                    }}>\n                                Request a demo\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <span id=\"cases\"/>\n                <div className=\"section section2\">\n                    <div className=\"container section2__container\">\n                        <h2 className=\"section__header\">EHR DB Use Cases</h2>\n\n                        <div className=\"blocks\">\n                            <div className=\"blocks__item\">\n                                <div className=\"blocks__image\">\n                                </div>\n                                <div className=\"blocks__title\">\n                                    EHR DB for storage\n                                </div>\n                                <div className=\"blocks__text\">\n                                    EHR DB allows to create a long-term CDR (Clinical Data Repository) storage for\n                                    patient records using openEHR standard. It can be scaled from a single medical\n                                    organisation to a regional level.\n                                </div>\n                            </div>\n                            <div className=\"blocks__item\">\n                                <div className=\"blocks__image\">\n                                </div>\n                                <div className=\"blocks__title\">\n                                    EHR DB for applications\n                                </div>\n                                <div className=\"blocks__text\">\n                                    EHR DB provides a set of services (SDK) allowing to create business healthcare\n                                    applications like doctor's user interface, mobile applications, backend application\n                                    with specific domain logic involved in healthcare process.\n                                </div>\n                            </div>\n                            <div className=\"blocks__item\">\n                                <div className=\"blocks__image\">\n                                </div>\n                                <div className=\"blocks__title\">\n                                    EHR DB for analytics\n                                </div>\n                                <div className=\"blocks__text\">\n                                    EHR DB provide a set of tools allowing to analyse clinical data at population level.\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"example\">\n                        </div>\n                    </div>\n                </div>\n                <span id=\"architecture\"/>\n                <div className=\"section section3\">\n                    <div className=\"container section3__container\">\n                        <h2 className=\"section__header section3__header\">EHR DB Architecture</h2>\n                        <p className=\"section3__text\">EHR DB is a backend application build with Java on top of <span className=\"emphasis\">PostgreSQL,\n                            ElasticSearch, Apache\n                            Cassandra</span> for maximum performance speed and unlimited scalability.\n                        </p>\n                        <div className=\"architecture\">\n                            <div className=\"architecture__column\">\n                                <div className=\"architecture__header\">\n                                    <div className=\"architecture__header-text\">Storage</div>\n                                </div>\n                                <div className=\"architecture__body\">\n                                    <div className=\"architecture__item\">\n                                        <div className=\"architecture__item-icon\"></div>\n                                        <div className=\"architecture__item-title\">Multitenant</div>\n                                        EHR DB is build using multitenant archetecture allowing to run service on a single hardware for multiple tenants or projects. The feature allows to deploy a cloud solution.\n                                    </div>\n                                    <div className=\"architecture__item\">\n                                        <div className=\"architecture__item-icon\"></div>\n                                        <div className=\"architecture__item-title\">Security & Access Control</div>\n                                        OAuth2 and flexible security management to access data or administrator features.\n                                    </div>\n                                    <div className=\"architecture__item\">\n                                        <div className=\"architecture__item-icon\"></div>\n                                        <div className=\"architecture__item-title\">openEHR Templates</div>\n                                        Allows to manage openEHR template versions and convert to application readable formats like XML, TDD or JSON representation.\n                                    </div>\n                                    <div className=\"architecture__item\">\n                                        <div className=\"architecture__item-icon\"></div>\n                                        <div className=\"architecture__item-title\">openEHR Clinical storage</div>\n                                        Allows to store and retrieve openEHR clinical data like EHR, Composition, Folders. openEHR Reference Model 1.0.4 supported, support for BMM coming soon. Support\n                                    </div>\n                                    <div className=\"architecture__item\">\n                                        <div className=\"architecture__item-icon\"></div>\n                                        <div className=\"architecture__item-title\">AQL queries</div>\n                                        Allows to run ad-hoc and streaming AQL queries against single or multiple EHR.\n                                    </div>\n                                    <div className=\"architecture__item\">\n                                        <div className=\"architecture__item-icon\"></div>\n                                        <div className=\"architecture__item-title\">Audit and logging</div>\n                                        Allows to log and audit all the events.\n                                    </div>\n                                    <div className=\"architecture__item\">\n                                        <div className=\"architecture__item-icon\"></div>\n                                        <div className=\"architecture__item-title\">System management and UI dashboard</div>\n                                        Provides REST API and User interface for system management.\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"architecture__column\">\n                                <div className=\"architecture__header\">\n                                    <div className=\"architecture__header-text\">Tools</div>\n                                </div>\n                                <div className=\"architecture__body\">\n                                    <div className=\"architecture__item\">\n                                        <div className=\"architecture__item-icon\"></div>\n                                        <div className=\"architecture__item-title\">Views</div>\n                                        Allow to create a stored procedures using AQL and JavaScript.\n                                    </div>\n                                    <div className=\"architecture__item\">\n                                        <div className=\"architecture__item-icon\"></div>\n                                        <div className=\"architecture__item-title\">Storage</div>\n                                        Allows to move clinical data based on AQL query to external RDBMS storage and keep it realtime synchronised allowing business application to use it.\n                                    </div>\n                                    <div className=\"architecture__item\">\n                                        <div className=\"architecture__item-icon\"></div>\n                                        <div className=\"architecture__item-title\">Application resources</div>\n                                        Allows to store forms resources or tags from external applications.\n                                    </div>\n                                    <div className=\"architecture__item\">\n                                        <div className=\"architecture__item-icon\"></div>\n                                        <div className=\"architecture__item-title\">Drafts</div>\n                                        Allows to store a temporal application data before sending it to the server.\n                                    </div>\n                                    <div className=\"architecture__item\">\n                                        <div className=\"architecture__item-icon\"></div>\n                                        <div className=\"architecture__item-title\">Triggers</div>\n                                        Allows to subscribe with AQL or JavaScript for clinical events and notify external service with formatted object.\n                                    </div>\n                                    <div className=\"architecture__item\">\n                                        <div className=\"architecture__item-icon\"></div>\n                                        <div className=\"architecture__item-title\">Clinical Data Migration</div>\n                                        Allows to import data from external openEHR CDR storages. Multiple drivers supported.\n                                    </div>\n                                    <div className=\"architecture__item\">\n                                        <div className=\"architecture__item-icon\"></div>\n                                        <div className=\"architecture__item-title\">API Client libraries</div>\n                                        Allows easy integration with native Java Client library and OpenAPI.\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <span id=\"contact\" name=\"contact\"/>\n                <div className=\"footer\">\n                    <div className=\"container footer__container\">\n                        <div className=\"copyright\">\n                            <div className=\"copyright__picture\">\n                                <div className=\"copyright__text1\">Solutions</div>\n                                <div className=\"copyright__text2\">Electronic\n                                    Health\n                                    Record\n                                </div>\n                            </div>\n                            <div className=\"copyright__caption\">\n                                <span>Copyright 2020</span>\n                                <div className=\"logo-small\"/>\n                            </div>\n                        </div>\n                        <Form onSubmit={this.showModalMessage} type=\"QUESTION\"/>\n                    </div>\n\n                </div>\n                <Modal onClose={this.showModal} show={this.state.modalIsVisible}>\n                    <Form classes=\"light\" onClose={this.showModal} onSubmit={this.showModalMessage} type=\"DEMO\"/>\n                </Modal>\n                <Modal onClose={this.showModalMessage} show={this.state.modalMessageIsVisible}>\n                    <div className=\"modal__message\">{this.state.modalMessageText}</div>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}